@inherits LayoutComponentBase
@using Property.WebApp.BusinessLogic.Providers

<MudLayout>
    <MudAppBar Elevation="1">
        <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="@((e) => DrawerToggle())"/>
        <MudText Typo="Typo.h5" Class="ml-3">Caliqon</MudText>
        <MudSpacer/>
        <AuthorizeView>
            <Authorized>
                <MudIconButton Icon="@Icons.Material.Filled.Logout" Color="Color.Inherit" Edge="Edge.End" OnClick="@((e) => Logout())"/>
                <MudIconButton Icon="@Icons.Material.Filled.Settings" Color="Color.Inherit" Edge="Edge.End" OnClick="@((e) => AccountSettings())"/>
            </Authorized>
            <NotAuthorized>
                <MudIconButton Icon="@Icons.Material.Filled.Login" Color="Color.Inherit" Edge="Edge.End" OnClick="@((e) => Login())"/>
            </NotAuthorized>
        </AuthorizeView>
    </MudAppBar>
    <MudDrawer @bind-Open="_drawerOpen" ClipMode="DrawerClipMode.Always" Elevation="2">
        <NavMenu/>
    </MudDrawer>
    <MudMainContent Style="height: 100%">
        @Body
    </MudMainContent>
</MudLayout>


@code {

    [Inject]
    private JwtAuthenticationStateProvider AuthenticationStateProvider { get; set; }
    
    [Inject]
    private NavigationManager NavigationManager { get; set; }

    bool _drawerOpen = true;
    
    void DrawerToggle()
    {
        _drawerOpen = !_drawerOpen;
    }

    private async Task Logout()
    {
        await AuthenticationStateProvider.Logout();
        
        StateHasChanged();
    }

    private async Task Login()
    {
        NavigationManager.NavigateTo("/authentication/login");
    }

    private void AccountSettings()
    {
        
    }
}
